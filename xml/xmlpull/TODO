xgo/xml/xmlpull/TODO

2013-12-07
    * edit all parser files to invoke xgo/lex/ functions through        * DONE
        lexer.go wrapper functions, to  improve error handling          * DONE
        - so ch, err = lx.NextChr() becomes ch, err = p.NextChr(), etc  * DONE

    * verify lexer.go has all functions in xgo/lex/lex_input.go
        - and rearrange the latter into alphabetical order
    * parseXmlDecl must collect its runes, add to Parser struct

2013-12-03 
    * XmlPullParserException in the specs can become XmlPullError,      * DONE
        which must return line and column numbers and must              * DONE
        implement the error interface                                   * DONE
    * Next() returns the event type, which is PullToken, defined
        in const.go
    * ParseXmlDecl should write version, encoding, standalone to        * DONE
        Parser struct rather than returning                             * DONE

2013-12-03 
    from the syntax diagrams:
    * ParseXmlDecl                                                      * DONE
    * ParseProcessingInstruction
    * ParseProlog
    
    * ParseEpilog
    * ParseAttribute
    * ParseCDSect                                                       * DONE
    * ParseComment                                                      * DONE
    * ParseEntityRef
    * ParseDocdecl
    * ParseStartTag
    * ParseEndTag

2013-11-21 (11-20, edited)
    * build skeletal parser as parser.go                                * DONE
        - be able to read and parse first line
            * parseXmlDecl()

    * write parser_test.go, initially testing that reset() works 
        as expected

2013-11-08
    * For string interning see eg stackoverflow 13017499                * DONE
        is-there-an-equivalent-to-javas-string-intern-function-in-go    * DONE

    * but We should be interning []byte instead!

