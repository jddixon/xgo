xgo/xml/xmlpull/TODO

2014-04-18
    * parseProlog must be restructured to better match the xml 1.0 
        syntax graph
        - xml 1.1 compliance can be introduced later as an option or as 
            a feature of a different parser
    * the test for \uFFFE could be moved to whatever calls parseProlog
    * the call to parseProlog should NOT be in next.go's Next() 
    * implement parseProlog_test.go 
    * tentatively: all parser components should produce an xml object
        (as in ../om/) which is then serialized to match the xmlpull
        spec in a separate step.  That is, the xmlpull parser produces
        objects, putting them in convetional places, and then the call
        to the interface serializes those objects into the form called
        for by the xmlpull spec

2014-04-13
    * move 'implementation of XmlPullParser' from parser.go             * DONE
        into implementation.go                                          * DONE
    * then move code from properties.go into that file

2014-03-23
    * get rudimentary parser working (decl + single line) ISSUE#5
2014-03-22
    * move stuff from properties.ZZZ to properties.go
2014-03-21
    * need test of getName() -- should be in properties_test.go
    * need test of getNamespace() -- properties_test.go
2014-03-18
    * desperately need parseEntityRef_test.go

2014-03-08
    * test printable*()
    * test charTests.go

2013-12-07
    * verify lexer.go has all functions in xgo/lex/lex_input.go
        - and rearrange the latter into alphabetical order
    * parseXmlDecl must collect its runes, add to Parser struct

2013-11-21 (11-20, edited)
    * build skeletal parser as parser.go                                * DONE
        - be able to read and parse first line
            * parseXmlDecl()

    * write parser_test.go, initially testing that reset() works 
        as expected

2013-11-08
    * For string interning see eg stackoverflow 13017499                * DONE
        is-there-an-equivalent-to-javas-string-intern-function-in-go    * DONE
